<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="approval">
 
	<select id="seq" resultType="Long">
		SELECT doc_seq.NEXTVAL FROM dual
	</select>
	
	<!-- 전자 결재/문서 양식 insert -->
	<insert id="insertDoc" parameterType="com.sp.grooveware.approval.Approval">
		INSERT INTO doc (doc_no, emp_no, doc_status, urgent, doc_name, draft_date, draft_deadline, 
						approval_step, approval_finaldate, submit_date, important, is_visible)
		VALUES (#{doc_no}, #{emp_no}, #{doc_status}, #{urgent}, #{doc_name, jdbcType=VARCHAR}, #{draft_date, jdbcType=DATE}, #{draft_deadline, jdbcType=DATE}, 
						#{approval_step, jdbcType=INTEGER}, #{approval_finaldate, jdbcType=DATE}, #{submit_date, jdbcType=DATE}, 0, 0)
	</insert>
	
	<insert id="insertDraft" parameterType="com.sp.grooveware.approval.Approval">
		INSERT INTO draft (doc_no, draft_category, draft_content)
		VALUES (#{doc_no}, #{draft_category, jdbcType=INTEGER}, #{draft_content, jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertDraftFile" parameterType="com.sp.grooveware.approval.Approval">
		INSERT INTO draft_file (doc_no, file_no, save_filename, original_filename)
		VALUES (#{doc_no}, draft_file_seq.NEXTVAL, #{save_filename, jdbcType=VARCHAR}, #{original_filename, jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertApproval" parameterType="com.sp.grooveware.approval.Approval">
		INSERT INTO approval (doc_no, emp_no, approval_status_id, approval_status, approval_date, reject_reason)
		VALUES (#{doc_no}, #{emp_no}, #{approval_status_id}, #{approval_status, jdbcType=INTEGER },#{approval_date, jdbcType=DATE}, #{reject_reason, jdbcType=VARCHAR})
	</insert>	
	
	<!-- 게시글 조건 -->
 	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   (INSTR(subject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'reg_date' ">
			   (TO_CHAR(reg_date, 'YYYYMMDD') = #{keyword}
		          OR TO_CHAR(reg_date, 'YYYY-MM-DD') = #{keyword} )
			</when>
			<when test="condition == 'content'">
			    DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
 
 
	<!-- 글 개수 -->
	<select id="dataCount"  parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM doc d
		LEFT OUTER JOIN draft dr ON dr.doc_no= d.doc_no

		<where>
				emp_no = #{emp_no} 
				AND doc_status = #{doc_status}
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where>   		
	</select>
	
	
	<!-- doc, draft 테이블 리스트 -->
	<select id="listDoc"  parameterType="map" resultType="com.sp.grooveware.approval.Approval">
	
	SELECT d.doc_no, doc_name, TO_CHAR(draft_date, 'YYYY-MM-DD')draft_date, TO_CHAR(draft_deadline, 'YYYY-MM-DD')draft_deadline, approval_step, TO_CHAR(approval_finaldate, 'YYYY-MM-DD')approval_finaldate,
      	 	TO_CHAR(submit_date, 'YYYY-MM-DD')submit_date, doc_status, urgent, important, is_visible, emp_no, 
        	dr.draft_category, dr.draft_content
	FROM doc d
	LEFT OUTER JOIN draft dr ON d.doc_no = dr.doc_no

		<where>
			emp_no = #{emp_no} 
				AND doc_status = #{doc_status}			
			<if test="keyword != null and keyword != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
	ORDER BY d.doc_no DESC
	OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY	
	</select>
	
	
	<!-- 글보기 -->
	<select id="readApproval" parameterType="Long" resultType="com.sp.grooveware.approval.Approval">
		SELECT d.doc_no, d.doc_name, TO_CHAR(d.draft_date, 'YYYY-MM-DD') AS draft_date, TO_CHAR(d.draft_deadline, 'YYYY-MM-DD') AS draft_deadline, d.approval_step, d.approval_finaldate,
		       d.submit_date, d.doc_status, d.urgent, d.important, d.is_visible, d.emp_no,
		       dr.draft_category, dr.draft_content
		FROM doc d
		LEFT JOIN draft dr ON d.doc_no = dr.doc_no
		WHERE d.doc_no = #{doc_no}
	</select>
		

	<!-- 수정 -->
	<update id="updateDoc" parameterType="com.sp.grooveware.approval.Approval">
	    UPDATE doc
	    SET doc_status = #{doc_status}, 
	        urgent = #{urgent}, 
	        doc_name = #{doc_name, jdbcType=VARCHAR}, 
	        draft_date = SYSDATE, 
	        draft_deadline = #{draft_deadline, jdbcType=DATE}, 
	        approval_step = #{approval_step, jdbcType=INTEGER}, 
	        approval_finaldate = #{approval_finaldate, jdbcType=DATE}, 
	        submit_date = #{submit_date, jdbcType=DATE}, 
	        important = #{important}, 
	        is_visible = #{is_visible}
	    WHERE doc_no = #{doc_no}
	</update>
	<update id="updateDraft" parameterType="com.sp.grooveware.approval.Approval">
	    UPDATE draft
	    SET draft_category=#{draft_category, jdbcType=INTEGER}, draft_content=#{draft_content, jdbcType=VARCHAR}
	    WHERE doc_no = #{doc_no}
	</update>	
	
	
	<!-- 삭제 -->
	<delete id="deleteDraft" parameterType="Long">
		DELETE FROM draft WHERE doc_no = #{doc_no}
	</delete>
	
	<delete id="deleteDoc" parameterType="Long">
		DELETE FROM doc WHERE doc_no = #{doc_no}
	</delete>
	
	
	
	<!-- approval 테이블 리스트 -->
	<select id="listApproval" parameterType="Long" resultType="com.sp.grooveware.approval.Approval">
		SELECT a.doc_no, a.emp_no, a.approval_status_id, a.approval_status, a.approval_date, a.reject_reason,
			b.emp_no, c.dept_name, d.emp_name, e.pos_name
			FROM approval a
			LEFT OUTER JOIN emp_history b ON a.emp_no = b.emp_no
			LEFT OUTER JOIN dept c ON b.dept_no = c.dept_no
			LEFT OUTER JOIN emp d ON b.emp_no = d.emp_no
			LEFT OUTER JOIN pos e ON b.pos_no = e.pos_no
		WHERE doc_no = #{doc_no}  
	</select>	
	
	
	<!-- approval 수정 -->
	<update id="updateApproval" parameterType="com.sp.grooveware.approval.Approval">
		 UPDATE  approval 
		 SET emp_no, approval_status_id, approval_status, approval_date, reject_reason 
		 WHERE doc_no = #{doc_no}  AND emp_no = #{emp_no} 
	</update>
		
	<!-- approval 삭제 -->	
	<delete id="deleteApproval" parameterType="long">
		DELETE approval where doc_no = #{doc_no}  
	</delete>
	
	
	<!-- 대기 문서 리스트  -->
	<select id="standByList"  parameterType="map" resultType="com.sp.grooveware.approval.Approval">
		SELECT  d.doc_no, a.emp_no, e.emp_name, approval_status, doc_status, urgent, doc_name,  
					TO_CHAR(d.draft_date, 'YYYY-MM-DD') AS draft_date, TO_CHAR(d.draft_deadline, 'YYYY-MM-DD') AS draft_deadline, 
					approval_step, TO_CHAR(d.approval_finaldate, 'YYYY-MM-DD') AS approval_finaldate, TO_CHAR(d.submit_date, 'YYYY-MM-DD') AS submit_date, important, is_visible,
					approval_status_id, TO_CHAR(approval_date, 'YYYY-MM-DD') AS approval_date, reject_reason
		FROM doc d
		LEFT OUTER JOIN  approval a ON  d.doc_no = a.doc_no
		LEFT OUTER JOIN emp e ON e.emp_no = d.emp_no
		WHERE a.emp_no = #{emp_no}  AND approval_status = #{approval_status}
		ORDER BY d.doc_no
	</select>
	
	
	<!-- 결재자 앞의 사람이 결재를 하지 않은 문서 가져오기 -->
	<select id="readNotPreApproval" parameterType="map" resultType="com.sp.grooveware.approval.Approval">
		SELECT doc_no, emp_no, approval_status_id, approval_status, approval_date, reject_reason
		FROM approval
		WHERE doc_no = #{doc_no} AND approval_status = #{approval_status} AND approval_status_id &lt; #{approval_status_id}
		ORDER BY approval_status_id DESC
		FETCH FIRST 1 ROWS ONLY	
	</select>
	
 
 
 
 
 
 
 
 
	<!-- 파일 리스트-->
	<select id="listFile" parameterType="Long" resultType="com.sp.grooveware.approval.Approval">
		SELECT file_no, doc_no, save_filename, original_filename
		FROM draft_file
		WHERE doc_no = #{doc_no}    
	</select>	
	
	<!-- 파일 읽기 -->
	<select id="readFile" parameterType="Long" resultType="com.sp.grooveware.approval.Approval">
		SELECT file_no, doc_no, save_filename, original_filename
		FROM draft_file
		WHERE file_no = #{file_no}    
	</select>	
	
	
	<!-- 파일 삭제 -->
	<delete id="deleteFile" parameterType="map">
		DELETE FROM draft_file WHERE ${field} = #{doc_no}	
	</delete>


	<!-- 멤버 리스트 -->
	<select id="listMember" parameterType="map" resultType="com.sp.grooveware.approval.Approval">
		SELECT a.emp_no, b.dept_name, c.emp_name, d.pos_name
		FROM emp_history a
		LEFT OUTER JOIN dept b ON a.dept_no = b.dept_no
		LEFT OUTER JOIN emp c ON a.emp_no = c.emp_no
		LEFT OUTER JOIN pos d ON a.pos_no = d.pos_no
		<where>
			a.emp_no != #{emp_no}
			AND 
			<if test="keyword!=null and keyword!='' ">
				(INSTR(c.emp_name, #{keyword}) &gt; 0)
			</if>
		</where>
	</select>

</mapper>