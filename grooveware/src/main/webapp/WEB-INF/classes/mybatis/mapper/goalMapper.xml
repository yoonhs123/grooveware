<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goal">

	<update id="insertGoal1" parameterType="com.sp.grooveware.goal.Goal">
		insert all
		into goal(goal_no, pj_no, goal_name, goal_start_date, goal_end_date, goal_content, goal_achv, parent, group_no, depth, order_no)
		 values (goal_seq.nextval, #{pj_no}, #{goal_name}, #{goal_start_date}, #{goal_end_date}, #{goal_content}, 0, 0, goal_seq.currval, 0, 0)
		into goal_file(goal_file_no, goal_no, saveFilename, originalFilename)
		 values (goal_file_seq.nextval, goal_seq.currval, #{saveFilename, jdbcType=VARCHAR}, #{originalFilename, jdbcType=VARCHAR})
		<foreach collection="emps" item="emp_no" index="index" separator=" " close="SELECT*FROM DUAL">
	         into  goal_member(goal_no, goal_member_no)
		 values
	        (goal_seq.currval, #{emp_no})
	    </foreach>		
	</update>
	
			
	<update id="insertGoal2" parameterType="com.sp.grooveware.goal.Goal">
		insert all
		into goal(goal_no, pj_no, goal_name, goal_start_date, goal_end_date, goal_content, goal_achv, parent, group_no, depth, order_no)
		 values (goal_seq.nextval, #{pj_no}, #{goal_name}, #{goal_start_date}, #{goal_end_date}, #{goal_content}, 0, #{parent}, #{group_no}, #{depth}+1, #{order_no}+1)
		into goal_file(goal_file_no, goal_no, saveFilename, originalFilename)
		 values (goal_file_seq.nextval, goal_seq.currval, #{saveFilename, jdbcType=VARCHAR}, #{originalFilename, jdbcType=VARCHAR})
		<foreach collection="emps" item="emp_no" index="index" separator=" " close="SELECT*FROM DUAL">
	         into  goal_member(goal_no, goal_member_no)
		 values
	        (goal_seq.currval, #{emp_no})
	    </foreach>		
	</update>
	
	
	<!-- 목표 리스트 -->
	<select id="listGoal" parameterType="map" resultType="com.sp.grooveware.goal.Goal">
  		SELECT a.goal_no, pj_no, goal_name, goal_start_date, goal_end_date, goal_content, 
			goal_achv, parent, group_no, depth, order_no, saveFilename
		FROM goal a 
		LEFT OUTER JOIN goal_file b ON a.goal_no = b.goal_no  
		START  WITH parent = 0 AND pj_no = #{pj_no}
        CONNECT  BY  PRIOR  a.goal_no  =  parent
	</select>


	<!-- 목표참여멤버 모달 -->
	<select id="listEmp" parameterType="map" resultType="com.sp.grooveware.goal.Goal">
		SELECT a.emp_no, b.dept_name, c.emp_name, d.pos_name
		FROM (
		    SELECT x.emp_no, x.history_no, x.dept_no, x.pos_no FROM emp_history x
		    LEFT OUTER JOIN emp_history y ON x.emp_no = y.emp_no AND x.history_no &lt; y.history_no
		    WHERE y.emp_no IS NULL) a
		LEFT OUTER JOIN dept b ON a.dept_no = b.dept_no
		LEFT OUTER JOIN emp c ON a.emp_no = c.emp_no
		LEFT OUTER JOIN pos d ON a.pos_no = d.pos_no
		<where>
			emp_resign_date is null
			<choose>
				<when test="condition == 'emp_name' ">
				AND	( INSTR(c.${condition}, #{keyword}) &gt; 0 )
				</when>
				<when test="condition == 'emp_no' ">
				AND	( INSTR(a.${condition}, #{keyword}) &gt; 0 )
				</when>
			</choose>
		</where>
	</select>
	
	
	<!-- 목표레벨(상위목표) 선택// 최상위의 하위인 상위목표 -->
	<select id="listDepth0" parameterType="map" resultType="com.sp.grooveware.goal.Goal">
		SELECT goal_no, goal_name, pj_name
		FROM goal a
		JOIN pj b ON b.pj_no = #{pj_no}
		WHERE depth = 0 AND a.pj_no = #{pj_no}
	</select>


	<!-- 목표레벨(상위목표) 선택// 상위의 하위인 하위목표 -->	
	<select id="listDepth1" parameterType="map" resultType="com.sp.grooveware.goal.Goal">
		SELECT goal_no, goal_name, pj_name
		FROM goal a
		JOIN pj b ON b.pj_no = #{pj_no}
		WHERE depth = 1 AND a.pj_no = #{pj_no}
	</select>
	
	
	<!-- 셀렉트박스에서 상위부모 정보 긁어오기 -->
	<select id="readGoalparent" parameterType="Long" resultType="com.sp.grooveware.goal.Goal">
		select goal_no, group_no, depth, order_no
		from goal WHERE goal_no = #{parent}
	</select>
	
	<!-- 계층적질의 order_no -->
	<update id="updateOrderno" parameterType="map">
		UPDATE goal SET order_no=order_no+1
		WHERE group_no=#{group_no} AND order_no &gt; #{order_no}
	</update>	


	<select id="readPjname" parameterType="Long" resultType="com.sp.grooveware.goal.Goal">
		select pj_name
		from pj
		where pj_no = #{pj_no}
	</select>
	
	<select id="readGoal" parameterType="Long" resultType="com.sp.grooveware.goal.Goal">
		SELECT a.goal_no, pj_no, goal_name, goal_start_date, goal_end_date, goal_content, parent, saveFilename, originalFilename
		FROM goal a
		LEFT OUTER JOIN goal_file b ON a.goal_no = b.goal_no
		WHERE a.goal_no = #{goal_no}
	</select>
	
	
	<select id="readGoalmember" parameterType="map" resultType="com.sp.grooveware.goal.Goal">
		SELECT b.goal_member_no, d.dept_name, c.emp_name, e.pos_name
		FROM (
		   SELECT x.emp_no, x.history_no, x.dept_no, x.pos_no FROM emp_history x
		   LEFT OUTER JOIN emp_history y ON x.emp_no = y.emp_no AND x.history_no &lt; y.history_no
		   WHERE y.emp_no IS NULL) a
		LEFT OUTER JOIN goal_member b ON a.emp_no = b.goal_member_no
		LEFT OUTER JOIN emp c ON a.emp_no = c.emp_no
		LEFT OUTER JOIN dept d ON a.dept_no = d.dept_no
		LEFT OUTER JOIN pos e ON a.pos_no = e.pos_no
		WHERE b.goal_no = #{goal_no}
		ORDER BY e.pos_no ASC, d.dept_no ASC
	</select>


	
	
</mapper>